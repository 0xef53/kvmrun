// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/cloudinit/v1/cloudinit.proto

package cloudinit

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type BuildImageRequest struct {
	MachineName string `protobuf:"bytes,1,opt,name=machine_name,json=machineName,proto3" json:"machine_name,omitempty"`
	// The instance-data keys
	Platform         string `protobuf:"bytes,101,opt,name=platform,proto3" json:"platform,omitempty"`
	Subplatform      string `protobuf:"bytes,102,opt,name=subplatform,proto3" json:"subplatform,omitempty"`
	Cloudname        string `protobuf:"bytes,103,opt,name=cloudname,proto3" json:"cloudname,omitempty"`
	Region           string `protobuf:"bytes,104,opt,name=region,proto3" json:"region,omitempty"`
	AvailabilityZone string `protobuf:"bytes,105,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	// These fields override the same name keys
	// from user_config structure
	Hostname             string   `protobuf:"bytes,201,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Domain               string   `protobuf:"bytes,202,opt,name=domain,proto3" json:"domain,omitempty"`
	Timezone             string   `protobuf:"bytes,203,opt,name=timezone,proto3" json:"timezone,omitempty"`
	VendorConfig         []byte   `protobuf:"bytes,298,opt,name=vendor_config,json=vendorConfig,proto3" json:"vendor_config,omitempty"`
	UserConfig           []byte   `protobuf:"bytes,299,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	OutputFile           string   `protobuf:"bytes,301,opt,name=output_file,json=outputFile,proto3" json:"output_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildImageRequest) Reset()         { *m = BuildImageRequest{} }
func (m *BuildImageRequest) String() string { return proto.CompactTextString(m) }
func (*BuildImageRequest) ProtoMessage()    {}
func (*BuildImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fd22de1468a6a1e, []int{0}
}
func (m *BuildImageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildImageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildImageRequest.Merge(m, src)
}
func (m *BuildImageRequest) XXX_Size() int {
	return m.Size()
}
func (m *BuildImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildImageRequest proto.InternalMessageInfo

func (m *BuildImageRequest) GetMachineName() string {
	if m != nil {
		return m.MachineName
	}
	return ""
}

func (m *BuildImageRequest) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *BuildImageRequest) GetSubplatform() string {
	if m != nil {
		return m.Subplatform
	}
	return ""
}

func (m *BuildImageRequest) GetCloudname() string {
	if m != nil {
		return m.Cloudname
	}
	return ""
}

func (m *BuildImageRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *BuildImageRequest) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *BuildImageRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *BuildImageRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *BuildImageRequest) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *BuildImageRequest) GetVendorConfig() []byte {
	if m != nil {
		return m.VendorConfig
	}
	return nil
}

func (m *BuildImageRequest) GetUserConfig() []byte {
	if m != nil {
		return m.UserConfig
	}
	return nil
}

func (m *BuildImageRequest) GetOutputFile() string {
	if m != nil {
		return m.OutputFile
	}
	return ""
}

type BuildImageResponse struct {
	OutputFile           string   `protobuf:"bytes,1,opt,name=output_file,json=outputFile,proto3" json:"output_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildImageResponse) Reset()         { *m = BuildImageResponse{} }
func (m *BuildImageResponse) String() string { return proto.CompactTextString(m) }
func (*BuildImageResponse) ProtoMessage()    {}
func (*BuildImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fd22de1468a6a1e, []int{1}
}
func (m *BuildImageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildImageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildImageResponse.Merge(m, src)
}
func (m *BuildImageResponse) XXX_Size() int {
	return m.Size()
}
func (m *BuildImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildImageResponse proto.InternalMessageInfo

func (m *BuildImageResponse) GetOutputFile() string {
	if m != nil {
		return m.OutputFile
	}
	return ""
}

func init() {
	proto.RegisterType((*BuildImageRequest)(nil), "kvmrun.api.services.cloudinit.v1.BuildImageRequest")
	proto.RegisterType((*BuildImageResponse)(nil), "kvmrun.api.services.cloudinit.v1.BuildImageResponse")
}

func init() {
	proto.RegisterFile("services/cloudinit/v1/cloudinit.proto", fileDescriptor_9fd22de1468a6a1e)
}

var fileDescriptor_9fd22de1468a6a1e = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcd, 0x6e, 0xd4, 0x30,
	0x14, 0x85, 0xe5, 0x22, 0x8d, 0xda, 0xdb, 0x41, 0x6a, 0xbd, 0x80, 0xa8, 0xa0, 0x61, 0xa8, 0x40,
	0xaa, 0x84, 0x94, 0x50, 0x86, 0xae, 0x60, 0xd5, 0x4a, 0x48, 0x65, 0xc1, 0x62, 0xd8, 0x75, 0x33,
	0xf2, 0x64, 0x6e, 0x92, 0x2b, 0x62, 0x3b, 0xc4, 0x76, 0xf8, 0x79, 0x05, 0xb6, 0x3c, 0x05, 0x88,
	0xf7, 0xe0, 0x67, 0xc3, 0x23, 0xa0, 0x79, 0x12, 0x14, 0x3b, 0x4d, 0x86, 0x1f, 0x09, 0xb1, 0x3c,
	0xdf, 0x39, 0xe7, 0xc6, 0x8e, 0x2f, 0xdc, 0x35, 0x58, 0x37, 0x94, 0xa2, 0x49, 0xd2, 0x52, 0xbb,
	0x15, 0x29, 0xb2, 0x49, 0x73, 0x3c, 0x88, 0xb8, 0xaa, 0xb5, 0xd5, 0x7c, 0xfa, 0xa2, 0x91, 0xb5,
	0x53, 0xb1, 0xa8, 0x28, 0xbe, 0x6c, 0xc4, 0x43, 0xa8, 0x39, 0x3e, 0x7c, 0x7f, 0x05, 0xf6, 0x4f,
	0x1d, 0x95, 0xab, 0x73, 0x29, 0x72, 0x9c, 0xe3, 0x4b, 0x87, 0xc6, 0xf2, 0xdb, 0x30, 0x96, 0x22,
	0x2d, 0x48, 0xe1, 0x42, 0x09, 0x89, 0x11, 0x9b, 0xb2, 0xa3, 0x9d, 0xf9, 0x6e, 0xc7, 0x9e, 0x09,
	0x89, 0xfc, 0x00, 0xb6, 0xab, 0x52, 0xd8, 0x4c, 0xd7, 0x32, 0x42, 0x6f, 0xf7, 0x9a, 0x4f, 0x61,
	0xd7, 0xb8, 0x65, 0x6f, 0x67, 0xa1, 0xbd, 0x81, 0xf8, 0x4d, 0xd8, 0xf1, 0xc7, 0xf0, 0xd3, 0x73,
	0xef, 0x0f, 0x80, 0x5f, 0x83, 0x51, 0x8d, 0x39, 0x69, 0x15, 0x15, 0xde, 0xea, 0x14, 0xbf, 0x07,
	0xfb, 0xa2, 0x11, 0x54, 0x8a, 0x25, 0x95, 0x64, 0xdf, 0x2c, 0xde, 0x6a, 0x85, 0x11, 0xf9, 0xc8,
	0xde, 0xa6, 0x71, 0xa1, 0x15, 0xf2, 0x1b, 0xb0, 0x5d, 0x68, 0x63, 0xfd, 0x17, 0xbe, 0x84, 0x0b,
	0xf4, 0x80, 0x5f, 0x87, 0xd1, 0x4a, 0x4b, 0x41, 0x2a, 0xfa, 0x1a, 0xac, 0x4e, 0xb6, 0x2d, 0x4b,
	0x12, 0xfd, 0xe4, 0x6f, 0x5d, 0xeb, 0x12, 0xf0, 0x3b, 0x70, 0xb5, 0x41, 0xb5, 0xd2, 0xf5, 0x22,
	0xd5, 0x2a, 0xa3, 0x3c, 0xfa, 0xb0, 0x35, 0x65, 0x47, 0xe3, 0xf9, 0x38, 0xd0, 0x33, 0x0f, 0xdb,
	0xdb, 0x3b, 0x83, 0x7d, 0xe6, 0x63, 0xc8, 0x40, 0xcb, 0x86, 0x84, 0x76, 0xb6, 0x72, 0x76, 0x91,
	0x51, 0x89, 0xd1, 0xa7, 0x2d, 0xff, 0x1d, 0x08, 0xec, 0x09, 0x95, 0x78, 0x78, 0x02, 0x7c, 0xf3,
	0x55, 0x4c, 0xa5, 0x95, 0x41, 0x7e, 0xeb, 0xd7, 0x1e, 0xfb, 0xbd, 0xf6, 0xe0, 0x1d, 0x83, 0xbd,
	0xb3, 0xf6, 0x37, 0x9e, 0x2b, 0xb2, 0xcf, 0xc3, 0x83, 0xf3, 0x57, 0x00, 0xc3, 0x2c, 0x3e, 0x8b,
	0xff, 0xb5, 0x13, 0xf1, 0x1f, 0xfb, 0x70, 0xf0, 0xf0, 0xff, 0x4a, 0xe1, 0xb8, 0xa7, 0x4f, 0x3f,
	0xaf, 0x27, 0xec, 0xfb, 0x7a, 0xc2, 0x7e, 0xac, 0x27, 0xec, 0xe2, 0x71, 0x4e, 0xb6, 0x70, 0xcb,
	0x38, 0xd5, 0x32, 0xb9, 0xff, 0x1a, 0xb3, 0x93, 0x59, 0x12, 0x86, 0x26, 0xa2, 0xa2, 0xe4, 0xaf,
	0xfb, 0xfc, 0xa8, 0x17, 0xcb, 0x91, 0x5f, 0xe8, 0xd9, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54,
	0x8a, 0x37, 0x46, 0xf9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CloudInitServiceClient is the client API for CloudInitService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CloudInitServiceClient interface {
	BuildImage(ctx context.Context, in *BuildImageRequest, opts ...grpc.CallOption) (*BuildImageResponse, error)
}

type cloudInitServiceClient struct {
	cc *grpc.ClientConn
}

func NewCloudInitServiceClient(cc *grpc.ClientConn) CloudInitServiceClient {
	return &cloudInitServiceClient{cc}
}

func (c *cloudInitServiceClient) BuildImage(ctx context.Context, in *BuildImageRequest, opts ...grpc.CallOption) (*BuildImageResponse, error) {
	out := new(BuildImageResponse)
	err := c.cc.Invoke(ctx, "/kvmrun.api.services.cloudinit.v1.CloudInitService/BuildImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudInitServiceServer is the server API for CloudInitService service.
type CloudInitServiceServer interface {
	BuildImage(context.Context, *BuildImageRequest) (*BuildImageResponse, error)
}

// UnimplementedCloudInitServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCloudInitServiceServer struct {
}

func (*UnimplementedCloudInitServiceServer) BuildImage(ctx context.Context, req *BuildImageRequest) (*BuildImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildImage not implemented")
}

func RegisterCloudInitServiceServer(s *grpc.Server, srv CloudInitServiceServer) {
	s.RegisterService(&_CloudInitService_serviceDesc, srv)
}

func _CloudInitService_BuildImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudInitServiceServer).BuildImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvmrun.api.services.cloudinit.v1.CloudInitService/BuildImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudInitServiceServer).BuildImage(ctx, req.(*BuildImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CloudInitService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kvmrun.api.services.cloudinit.v1.CloudInitService",
	HandlerType: (*CloudInitServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildImage",
			Handler:    _CloudInitService_BuildImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/cloudinit/v1/cloudinit.proto",
}

func (m *BuildImageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildImageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildImageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OutputFile) > 0 {
		i -= len(m.OutputFile)
		copy(dAtA[i:], m.OutputFile)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.OutputFile)))
		i--
		dAtA[i] = 0x12
		i--
		dAtA[i] = 0xea
	}
	if len(m.UserConfig) > 0 {
		i -= len(m.UserConfig)
		copy(dAtA[i:], m.UserConfig)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.UserConfig)))
		i--
		dAtA[i] = 0x12
		i--
		dAtA[i] = 0xda
	}
	if len(m.VendorConfig) > 0 {
		i -= len(m.VendorConfig)
		copy(dAtA[i:], m.VendorConfig)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.VendorConfig)))
		i--
		dAtA[i] = 0x12
		i--
		dAtA[i] = 0xd2
	}
	if len(m.Timezone) > 0 {
		i -= len(m.Timezone)
		copy(dAtA[i:], m.Timezone)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.Timezone)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xda
	}
	if len(m.Domain) > 0 {
		i -= len(m.Domain)
		copy(dAtA[i:], m.Domain)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.Domain)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd2
	}
	if len(m.Hostname) > 0 {
		i -= len(m.Hostname)
		copy(dAtA[i:], m.Hostname)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.Hostname)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xca
	}
	if len(m.AvailabilityZone) > 0 {
		i -= len(m.AvailabilityZone)
		copy(dAtA[i:], m.AvailabilityZone)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.AvailabilityZone)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xca
	}
	if len(m.Region) > 0 {
		i -= len(m.Region)
		copy(dAtA[i:], m.Region)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.Region)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc2
	}
	if len(m.Cloudname) > 0 {
		i -= len(m.Cloudname)
		copy(dAtA[i:], m.Cloudname)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.Cloudname)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xba
	}
	if len(m.Subplatform) > 0 {
		i -= len(m.Subplatform)
		copy(dAtA[i:], m.Subplatform)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.Subplatform)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb2
	}
	if len(m.Platform) > 0 {
		i -= len(m.Platform)
		copy(dAtA[i:], m.Platform)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.Platform)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xaa
	}
	if len(m.MachineName) > 0 {
		i -= len(m.MachineName)
		copy(dAtA[i:], m.MachineName)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.MachineName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BuildImageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildImageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildImageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OutputFile) > 0 {
		i -= len(m.OutputFile)
		copy(dAtA[i:], m.OutputFile)
		i = encodeVarintCloudinit(dAtA, i, uint64(len(m.OutputFile)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCloudinit(dAtA []byte, offset int, v uint64) int {
	offset -= sovCloudinit(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BuildImageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MachineName)
	if l > 0 {
		n += 1 + l + sovCloudinit(uint64(l))
	}
	l = len(m.Platform)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.Subplatform)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.Cloudname)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.Region)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.AvailabilityZone)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.Hostname)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.Domain)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.Timezone)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.VendorConfig)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.UserConfig)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	l = len(m.OutputFile)
	if l > 0 {
		n += 2 + l + sovCloudinit(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BuildImageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OutputFile)
	if l > 0 {
		n += 1 + l + sovCloudinit(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCloudinit(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCloudinit(x uint64) (n int) {
	return sovCloudinit(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BuildImageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCloudinit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildImageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildImageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MachineName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MachineName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subplatform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subplatform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cloudname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailabilityZone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvailabilityZone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 201:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hostname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hostname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 202:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Domain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 203:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timezone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timezone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 298:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VendorConfig", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VendorConfig = append(m.VendorConfig[:0], dAtA[iNdEx:postIndex]...)
			if m.VendorConfig == nil {
				m.VendorConfig = []byte{}
			}
			iNdEx = postIndex
		case 299:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserConfig", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserConfig = append(m.UserConfig[:0], dAtA[iNdEx:postIndex]...)
			if m.UserConfig == nil {
				m.UserConfig = []byte{}
			}
			iNdEx = postIndex
		case 301:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutputFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutputFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCloudinit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCloudinit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildImageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCloudinit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildImageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildImageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutputFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCloudinit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCloudinit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutputFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCloudinit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCloudinit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCloudinit(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCloudinit
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCloudinit
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCloudinit
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCloudinit
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCloudinit
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCloudinit        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCloudinit          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCloudinit = fmt.Errorf("proto: unexpected end of group")
)
