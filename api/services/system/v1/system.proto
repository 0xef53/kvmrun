syntax = "proto3";

package kvmrun.api.services.system.v1;

import "google/protobuf/empty.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "types/types.proto";

option go_package = "github.com/0xef53/kvmrun/api/services/system/v1;system";

service SystemService {
    rpc RegisterQemuInstance(RegisterQemuInstanceRequest) returns (RegisterQemuInstanceResponse) { }
    rpc UnregisterQemuInstance(UnregisterQemuInstanceRequest) returns (google.protobuf.Empty) { }
    rpc StopQemuInstance(StopQemuInstanceRequest) returns (google.protobuf.Empty) { }
    rpc StartIncomingMachine(StartIncomingMachineRequest) returns (StartIncomingMachineResponse) { }

    rpc StartDiskBackendProxy(DiskBackendProxyRequest) returns (google.protobuf.Empty) { }
    rpc StopDiskBackendProxy(DiskBackendProxyRequest) returns (google.protobuf.Empty) { }

    rpc GracefulShutdown(google.protobuf.Empty) returns (google.protobuf.Empty) { }

    rpc GetAppConf(google.protobuf.Empty) returns (GetAppConfResponse) { }
}

message RegisterQemuInstanceRequest {
    string name = 1;
    int64 mem_actual = 2;
    int32 pid = 3 [(gogoproto.customname) = "PID"];
}

message RegisterQemuInstanceResponse {
    string task_key = 1;
}

message UnregisterQemuInstanceRequest {
    string name = 1;
}

message StopQemuInstanceRequest {
    string name = 1;
    int32 graceful_timeout = 2;
}

message StartIncomingMachineRequest {
    string name = 1;
    bytes manifest = 2;
    map<string, uint64> disks = 3;
    map<string, bytes> extra_files = 4;
    bool create_disks = 5;
    string listen_addr = 6;
    bool turn_off_after = 7;
}

message StartIncomingMachineResponse {
    types.IncomingMachineRequisites requisites = 1;
}

message DiskBackendProxyRequest {
    string name = 1;
}

message GetAppConfResponse {
    types.AppConf app_conf = 1;
}
